#!/bin/bash
#
# rrdcsv [-d output_dir] <metric1 metric2 ...>
#
# Compile specified metrics, write them to files in <output_dir>,
# which is by default the \$PWD.
# 
# To compile *all* metrics, run: 
# rrdcsv all
# 
# Note: himrod ganglia files are storaged in:
# /var/lib/ganglia/rrds/himrod/
#
# If you get any weirdness in this script, try looking at the output of:
# rrdtool dump <file>
#
# =================================================
# Author: Michael B Hynes, mbhynes@uwaterloo.ca
# License: GPL 3
# Creation Date: Wed Nov 12 17:28:58 EST 2014
# Last Modified: Thu 14 May 2015 06:26:11 PM EDT
# =================================================

. spark_vars

# set default output directory
output_directory="$PWD"

SCRIPT_NAME=$(basename $0)
msg () {
	echo "$SCRIPT_NAME: $@" 1>&2
}
warn () {
	msg WARNING: $@
}
error () {
	msg ERROR: $@
}

optstring="d:"
while getopts "$optstring" opt; do
	case "$opt" in
		d)
			output_directory="$OPTARG"
			;;
		:)
			error "-$opt requires argument" 
			;; 
		?)
			error invalid option
			;; 
	esac
done
shift $((OPTIND - 1))

function dump() {
	DATE="[[:digit:] -:EST]+"
	BLANK="[[:space:]]*"
	START="<!--"
	FORMAT=".*\/ ([[:digit:]]+) --> <row><v>([[:digit:]\.e+-]+)<\/v><\/row>"
	while (( $# > 0))
	do
		rrdtool dump $1 | sed -r -e "1,38d; s/$FORMAT/\1$GANGLIA_DELIM\2/; /[[:space:]]*<\/[[:alpha:]]*>/d"
		shift
	done
}

function compile_metrics() {
	m=$1
	shift
 	DIRS=$@

	fout="$output_directory/$(basename $m .rrd)"
	msg "fout=$fout"

	FIRST=1
	for d in $DIRS; do
		if grep -q $GANGLIA_EXCLUDE <<<"$d"; then 
			continue
		fi

		if ((FIRST)); then
			if [ -f $d/$m ]; then
				FIRST=0
				dump $d/$m > $fout
			else 
				echo ERROR: "$d/$m does not exist" 1>&2
			fi

		else

			if [ -f $d/$m ]
			then
				tmpf=$(tempfile)
				join $fout <(dump $d/$m) > $tmpf

				if [ $? -eq 0 ]
				then
					mv $tmpf $fout
				else
					echo ERROR: Could not join $d/$m  1>&2
					echo ERROR: You should examine the output of \$rrdtool dump $d/$m: 1>&2
					rm $tmpf
				fi

			else 
				echo "ERROR: $d/$m does not exist" 1>&2
			fi
		fi
	done
}

if (( $# == 0))
then
	cat <<EOF
 usage: $(basename $0) -d <output_dir> [metric1 metric2 ...]

 Compile specified metrics, write them to files in <output_dir>,
 which is by default the \$PWD.

 To compile *all* metrics, run: 
 $(basename $0) all

 Note: himrod ganglia files are storaged in:
 /var/lib/ganglia/rrds/himrod/

 If you get any weirdness in this script, try looking at the output of:
 rrdtool dump <file>
EOF
	exit
fi

# set all ganglia directories from to extract rrds
DIRS="$GANGLIA_SRC/$SPARK_MASTER_NAME"
for node in $SPARK_SLAVE_NAMES
do
	DIRS="$DIRS $GANGLIA_SRC/$node"
done

if [[ "$1" == "all" ]]
then
	METRICS=$(find $DIRS -name '*.rrd' -a ! -wholename "*$GANGLIA_EXCLUDE*" -printf '%f\n' 2>/dev/null | sort | uniq)
else
	METRICS=$@
fi

for d in $DIRS
do
	unit=$(basename $d) 
	if [[ "$unit" == "$GANGLIA_EXCLUDE" ]]
	then 
		continue
	fi
	echo -n "$unit " 
done

mkdir -p "$output_directory"
for m in $METRICS
do
	echo "Compiling metric: $m" 1>&2
	if [ "$(ext $m)" != ".rrd" ]
	then
		m="$m.rrd"
	fi
	compile_metrics $m $DIRS &
done

